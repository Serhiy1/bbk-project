openapi: 3.0.0
info:
  title: User Authentication API
  version: 1.0.0
paths:
  /user/signup:
    post:
      summary: User signup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupRequest'
      responses:
        '200':
          description: Signup successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignupResponse'
        '409':
          description: Email already in use
        '400':
          description: Password complexity not met
  /user/login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '404':
          description: Email does not exist
        '401':
          description: Password does not match
        '400':
          description: Bad request due to parameter type mismatch or other validation
            errors
  /user/whoami:
    get:
      summary: User identity
      security:
      - jwtAuth: []
      responses:
        '200':
          description: User identity returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '403':
          description: User is not authenticated          
          
components:
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    SignupRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
          pattern: '^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$'
          description: >
            Password must contain at least 8 characters, one uppercase letter, one lowercase letter,
            one number, and one special character (@$!%*?&).
        CompanyName:
          type: string
      required:
      - email
      - password
      - CompanyName
    SignupResponse:
      type: object
      properties:
        token:
          type: string
        tenantID:
          type: string
      required:
      - token
      - tenantID
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - email
      - password
    LoginResponse:
      type: object
      properties:
        token:
          type: string
      required:
      - token
    UserResponse:
      type: object
      properties:
        email:
          type: string
        tenantID:
          type: string
      required:
      - email
      - tenantID
